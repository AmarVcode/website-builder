{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amar\\\\Documents\\\\GitHub\\\\website-builder\\\\my-app\\\\src\\\\components\\\\PropertyPanel.tsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PanelContainer = styled.div`\n  width: 300px;\n  background-color: white;\n  border-left: 1px solid #e0e0e0;\n  padding: 20px;\n  overflow-y: auto;\n`;\n_c = PanelContainer;\nconst PropertyGroup = styled.div`\n  margin-bottom: 20px;\n`;\n_c2 = PropertyGroup;\nconst PropertyLabel = styled.label`\n  display: block;\n  margin-bottom: 8px;\n  font-weight: 500;\n  color: #333;\n`;\n_c3 = PropertyLabel;\nconst PropertyInput = styled.input`\n  width: 100%;\n  padding: 8px;\n  border: 1px solid #e0e0e0;\n  border-radius: 4px;\n  margin-bottom: 12px;\n\n  &:focus {\n    outline: none;\n    border-color: #2196f3;\n  }\n`;\n_c4 = PropertyInput;\nconst ColorInput = styled(PropertyInput)`\n  height: 40px;\n  padding: 4px;\n`;\n_c5 = ColorInput;\nconst PropertyPanel = ({\n  selectedElement,\n  elements,\n  setElements\n}) => {\n  const selectedElementData = elements.find(el => el.id === selectedElement);\n  const handlePropertyChange = (property, value) => {\n    setElements(prevElements => prevElements.map(el => el.id === selectedElement ? {\n      ...el,\n      [property]: value\n    } : el));\n  };\n  if (!selectedElement || !selectedElementData) {\n    return /*#__PURE__*/_jsxDEV(PanelContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Properties\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Select an element to edit its properties\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(PanelContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Properties\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), selectedElementData.type === 'text' && /*#__PURE__*/_jsxDEV(PropertyGroup, {\n      children: [/*#__PURE__*/_jsxDEV(PropertyLabel, {\n        children: \"Text Content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(PropertyInput, {\n        type: \"text\",\n        value: selectedElementData.content,\n        onChange: e => handlePropertyChange('content', e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this), selectedElementData.type === 'image' && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(PropertyGroup, {\n        children: [/*#__PURE__*/_jsxDEV(PropertyLabel, {\n          children: \"Image URL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(PropertyInput, {\n          type: \"text\",\n          value: selectedElementData.src,\n          onChange: e => handlePropertyChange('src', e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(PropertyGroup, {\n        children: [/*#__PURE__*/_jsxDEV(PropertyLabel, {\n          children: \"Alt Text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(PropertyInput, {\n          type: \"text\",\n          value: selectedElementData.alt,\n          onChange: e => handlePropertyChange('alt', e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), selectedElementData.type === 'button' && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(PropertyGroup, {\n        children: [/*#__PURE__*/_jsxDEV(PropertyLabel, {\n          children: \"Button Text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(PropertyInput, {\n          type: \"text\",\n          value: selectedElementData.text,\n          onChange: e => handlePropertyChange('text', e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(PropertyGroup, {\n        children: [/*#__PURE__*/_jsxDEV(PropertyLabel, {\n          children: \"Background Color\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ColorInput, {\n          type: \"color\",\n          value: selectedElementData.backgroundColor,\n          onChange: e => handlePropertyChange('backgroundColor', e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(PropertyGroup, {\n        children: [/*#__PURE__*/_jsxDEV(PropertyLabel, {\n          children: \"Text Color\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ColorInput, {\n          type: \"color\",\n          value: selectedElementData.color,\n          onChange: e => handlePropertyChange('color', e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_c6 = PropertyPanel;\nexport default PropertyPanel;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"PanelContainer\");\n$RefreshReg$(_c2, \"PropertyGroup\");\n$RefreshReg$(_c3, \"PropertyLabel\");\n$RefreshReg$(_c4, \"PropertyInput\");\n$RefreshReg$(_c5, \"ColorInput\");\n$RefreshReg$(_c6, \"PropertyPanel\");","map":{"version":3,"names":["React","styled","jsxDEV","_jsxDEV","Fragment","_Fragment","PanelContainer","div","_c","PropertyGroup","_c2","PropertyLabel","label","_c3","PropertyInput","input","_c4","ColorInput","_c5","PropertyPanel","selectedElement","elements","setElements","selectedElementData","find","el","id","handlePropertyChange","property","value","prevElements","map","children","fileName","_jsxFileName","lineNumber","columnNumber","type","content","onChange","e","target","src","alt","text","backgroundColor","color","_c6","$RefreshReg$"],"sources":["C:/Users/Amar/Documents/GitHub/website-builder/my-app/src/components/PropertyPanel.tsx"],"sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst PanelContainer = styled.div`\r\n  width: 300px;\r\n  background-color: white;\r\n  border-left: 1px solid #e0e0e0;\r\n  padding: 20px;\r\n  overflow-y: auto;\r\n`;\r\n\r\nconst PropertyGroup = styled.div`\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst PropertyLabel = styled.label`\r\n  display: block;\r\n  margin-bottom: 8px;\r\n  font-weight: 500;\r\n  color: #333;\r\n`;\r\n\r\nconst PropertyInput = styled.input`\r\n  width: 100%;\r\n  padding: 8px;\r\n  border: 1px solid #e0e0e0;\r\n  border-radius: 4px;\r\n  margin-bottom: 12px;\r\n\r\n  &:focus {\r\n    outline: none;\r\n    border-color: #2196f3;\r\n  }\r\n`;\r\n\r\nconst ColorInput = styled(PropertyInput)`\r\n  height: 40px;\r\n  padding: 4px;\r\n`;\r\n\r\ninterface PropertyPanelProps {\r\n  selectedElement: string | null;\r\n  elements: any[];\r\n  setElements: React.Dispatch<React.SetStateAction<any[]>>;\r\n}\r\n\r\nconst PropertyPanel: React.FC<PropertyPanelProps> = ({\r\n  selectedElement,\r\n  elements,\r\n  setElements,\r\n}) => {\r\n  const selectedElementData = elements.find(el => el.id === selectedElement);\r\n\r\n  const handlePropertyChange = (property: string, value: string) => {\r\n    setElements(prevElements =>\r\n      prevElements.map(el =>\r\n        el.id === selectedElement\r\n          ? { ...el, [property]: value }\r\n          : el\r\n      )\r\n    );\r\n  };\r\n\r\n  if (!selectedElement || !selectedElementData) {\r\n    return (\r\n      <PanelContainer>\r\n        <h2>Properties</h2>\r\n        <p>Select an element to edit its properties</p>\r\n      </PanelContainer>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <PanelContainer>\r\n      <h2>Properties</h2>\r\n      {selectedElementData.type === 'text' && (\r\n        <PropertyGroup>\r\n          <PropertyLabel>Text Content</PropertyLabel>\r\n          <PropertyInput\r\n            type=\"text\"\r\n            value={selectedElementData.content}\r\n            onChange={(e) => handlePropertyChange('content', e.target.value)}\r\n          />\r\n        </PropertyGroup>\r\n      )}\r\n\r\n      {selectedElementData.type === 'image' && (\r\n        <>\r\n          <PropertyGroup>\r\n            <PropertyLabel>Image URL</PropertyLabel>\r\n            <PropertyInput\r\n              type=\"text\"\r\n              value={selectedElementData.src}\r\n              onChange={(e) => handlePropertyChange('src', e.target.value)}\r\n            />\r\n          </PropertyGroup>\r\n          <PropertyGroup>\r\n            <PropertyLabel>Alt Text</PropertyLabel>\r\n            <PropertyInput\r\n              type=\"text\"\r\n              value={selectedElementData.alt}\r\n              onChange={(e) => handlePropertyChange('alt', e.target.value)}\r\n            />\r\n          </PropertyGroup>\r\n        </>\r\n      )}\r\n\r\n      {selectedElementData.type === 'button' && (\r\n        <>\r\n          <PropertyGroup>\r\n            <PropertyLabel>Button Text</PropertyLabel>\r\n            <PropertyInput\r\n              type=\"text\"\r\n              value={selectedElementData.text}\r\n              onChange={(e) => handlePropertyChange('text', e.target.value)}\r\n            />\r\n          </PropertyGroup>\r\n          <PropertyGroup>\r\n            <PropertyLabel>Background Color</PropertyLabel>\r\n            <ColorInput\r\n              type=\"color\"\r\n              value={selectedElementData.backgroundColor}\r\n              onChange={(e) => handlePropertyChange('backgroundColor', e.target.value)}\r\n            />\r\n          </PropertyGroup>\r\n          <PropertyGroup>\r\n            <PropertyLabel>Text Color</PropertyLabel>\r\n            <ColorInput\r\n              type=\"color\"\r\n              value={selectedElementData.color}\r\n              onChange={(e) => handlePropertyChange('color', e.target.value)}\r\n            />\r\n          </PropertyGroup>\r\n        </>\r\n      )}\r\n    </PanelContainer>\r\n  );\r\n};\r\n\r\nexport default PropertyPanel; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}